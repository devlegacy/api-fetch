!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o,r=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,c){function u(e){try{l(o.next(e))}catch(e){c(e)}}function i(e){try{l(o.throw(e))}catch(e){c(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(u,i)}l((o=o.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var n,o,r,c,u={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return c={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c;function i(c){return function(i){return function(c){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,o&&(r=2&c[0]?o.return:c[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,c[1])).done)return r;switch(o=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return u.label++,{value:c[1],done:!1};case 5:u.label++,o=c[1],c=[0];continue;case 7:c=u.ops.pop(),u.trys.pop();continue;default:if(!(r=u.trys,(r=r.length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){u=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){u.label=c[1];break}if(6===c[0]&&u.label<r[1]){u.label=r[1],r=c;break}if(r&&u.label<r[2]){u.label=r[2],u.ops.push(c);break}r[2]&&u.ops.pop(),u.trys.pop();continue}c=t.call(e,u)}catch(e){c=[6,e],o=0}finally{n=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,i])}}};Object.defineProperty(t,"__esModule",{value:!0}),fetch("https://jsonplaceholder.typicode.com/posts").then((function(e){return console.log(typeof e),e.json()})).then((function(e){return console.log(e)})),r(void 0,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return[4,fetch("https://jsonplaceholder.typicode.com/posts")];case 1:return[4,t.sent().json()];case 2:return e=t.sent(),console.log(e),[2]}}))})),fetch("https://jsonplaceholder.typicode.com/pos").then((function(e){if(console.log("Status code: "+e.status),e.status>=200&&e.status<300)return e.json();throw new Error("Error in the fetch request")})).then((function(e){return console.log(e)})).catch((function(e){return console.error("[Fetch error]:",e.message)}));var u={userId:1,_limit:3},i=new URL("https://jsonplaceholder.typicode.com/posts");Object.keys(u).forEach((function(e){i.searchParams.append(e,u[e])})),console.log(i),fetch(i.href).then((function(e){return e.json()})).then((function(e){return console.log(e)}));fetch("https://jsonplaceholder.typicode.com/posts",{method:"POST",body:JSON.stringify({userId:1,title:"foo",body:"bar"}),headers:{"Content-type":"application/json; charset=UTF-8",Accept:"application/json; charset=UTF-8"}}).then((function(e){return e.json()})).then((function(e){return console.log(e)})),null===(o=document.querySelector("#frm-upload"))||void 0===o||o.addEventListener("submit",(function(e){e.preventDefault();var t=e.target,n=new FormData(t);fetch(t.action,{method:"POST",body:n}).then((function(e){return e.text()})).then((function(e){return alert(e)})).catch((function(e){return console.error("[Upload fetch error]:",e.message)}))})),fetch("http://localhost:8000/api/").then((function(e){return e.json()})).then((function(e){return console.log(e)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,