!function(t){var e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)o.d(n,r,function(e){return t[e]}.bind(null,r));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=1)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ToDoService=void 0;var n=o(4),r=o(5),c=function(){function t(){this.serviceURL=r.ApiConfig.BASE_URL+"/todos/",this.http=new n.HttpClient}return t.prototype.getAll=function(t){return void 0===t&&(t=20),this.http.get(this.serviceURL+"?_limit="+t)},t.prototype.find=function(){},t.prototype.create=function(t){return this.http.post(""+this.serviceURL,t)},t.prototype.update=function(t){return this.http.update(""+this.serviceURL+t.id,t)},t.prototype.destroy=function(t){return this.http.destroy(""+this.serviceURL+t.id)},t}();e.ToDoService=c},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=o(2),r=o(3),c=o(6),i=o(8),s=o(9);(new(function(){function t(){}return t.prototype.start=function(){document.addEventListener("DOMContentLoaded",(function(){console.log(">> Start app"),new n.NavBarComponent({selector:".navbar-burger"}).render(),new s.PracticeComponent({selector:"#practices"}).render(),new i.UploadComponent({selector:"#frm-upload"}).render(),new r.ToDoComponent({selector:"#to-do-container"}).render(),new c.CreateToDoComponent({selector:"#frm-create-post"}).render()}))},t}())).start()},function(t,e,o){"use strict";var n,r=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.NavBarComponent=void 0;var c=o(11),i=function(t){function e(e){return t.call(this,e)||this}return r(e,t),e.prototype.findNavBarElements=function(){return Array.prototype.slice.call(document.querySelectorAll(this.selector),0)},e.prototype.handlerNavBarClick=function(t){t.addEventListener("click",(function(){var e=t.dataset.target||"navMenu",o=document.getElementById(e);t.classList.toggle("is-active"),null==o||o.classList.toggle("is-active")}))},e.prototype.render=function(){var t=this.findNavBarElements();null==t||t.forEach(this.handlerNavBarClick)},e}(c.BaseComponent);e.NavBarComponent=i},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ToDoComponent=void 0;var n=o(0),r=function(){function t(t,e){void 0===e&&(e=new n.ToDoService),this.options=t,this.toDoService=e,this.posts=[]}return t.prototype.render=function(){var t=this,e=document.querySelector(this.options.selector);e&&this.toDoService.getAll().then((function(o){t.posts=o,e.innerHTML=t.template(),null==e||e.addEventListener("click",(function(e){var o,n=e.target;if(n.classList.value.includes("content")){var r=n.querySelector(".content")||n;t.updateToDo(r)}else if(n.classList.value.startsWith("card-footer-item")){e.preventDefault();r=null===(o=n.closest("article"))||void 0===o?void 0:o.querySelector(".content");t.deleteToDo(r)}}))}))},t.prototype.template=function(){var t="";return this.posts.forEach((function(e){t+='\n        <div class="column is-12">\n          <article class="card">\n            <div class="card-content">\n              <div  class="content"\n                    data-id="'+e.id+'"\n                    data-title="'+e.title+"\"\n                    data-post='"+JSON.stringify(e)+"'>\n                "+e.title+'\n              </div>\n            </div>\n            <footer class="card-footer">\n              <a href="#" class="card-footer-item">Delete</a>\n            </footer>\n          </article>\n        </div>\n      '})),t},t.prototype.updateToDo=function(t){var e=this;t.addEventListener("blur",(function(t){var o=t.target,n=JSON.parse(o.dataset.post);n.title=o.innerText,e.toDoService.update(n),o.classList.remove("px-4","py-4"),o.contentEditable="false"}),{once:!0}),t.classList.add("px-4","py-4"),t.contentEditable="true",t.focus()},t.prototype.deleteToDo=function(t){var e,o=JSON.parse(t.dataset.post);this.toDoService.destroy(o),null===(e=t.closest("div.column"))||void 0===e||e.remove()},t}();e.ToDoComponent=r},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.HttpClient=void 0;var n=function(){function t(){}return t.prototype.get=function(e){return t.configureRequest(e,"GET")},t.prototype.destroy=function(e){return t.configureRequest(e,"DELETE")},t.prototype.post=function(e,o){return void 0===o&&(o=null),t.configureRequest(e,"POST",o)},t.prototype.update=function(e,o){return void 0===o&&(o=null),t.configureRequest(e,"PUT",o)},t.configureRequest=function(t,e,o){return void 0===o&&(o=null),fetch(t,{method:e,headers:{"Content-Type":"application/json; charset=UTF-8",Accept:"application/json; charset=UTF-8"}}).then((function(t){return t.json()}))},t}();e.HttpClient=n},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ApiConfig=void 0;var n=function(){function t(){}return t.BASE_URL="https://jsonplaceholder.typicode.com",t}();e.ApiConfig=n},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CreateToDoComponent=void 0;var n=o(0),r=o(7),c=function(){function t(t,e){void 0===e&&(e=new n.ToDoService),this.options=t,this.toDoService=e}return t.prototype.render=function(){var t=this,e=document.querySelector(this.options.selector);e&&e.addEventListener("submit",(function(o){var n;o.preventDefault();var c=e.querySelector("button"),i=e.querySelector("textarea");null===(n=i.closest(".control"))||void 0===n||n.classList.add("is-loading"),c.disabled=!0;var s=new r.Post(i.value);return t.toDoService.create(s).then((function(t){var e,o;null===(e=i.closest(".control"))||void 0===e||e.classList.remove("is-loading"),c.disabled=!1,i.value="",s.id=t.id;var n='\n          <article class="card">\n            <div class="card-content">\n              <div  class="content"\n                    data-id="'+s.id+'"\n                    data-title="'+s.title+"\"\n                    data-post='"+JSON.stringify(s)+"'>\n                "+s.title+'\n              </div>\n            </div>\n            <footer class="card-footer">\n              <a href="#" class="card-footer-item">Delete</a>\n            </footer>\n          </article>\n      ',r=document.createElement("div");r.classList.add("column","is-12"),r.innerHTML=n,null===(o=document.querySelector("#to-do-container"))||void 0===o||o.prepend(r)})),!1}))},t}();e.CreateToDoComponent=c},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Post=void 0;var n=function(t){this.userId=0,this.id=0,this.title="",this.body="",this.title=t};e.Post=n},function(t,e,o){"use strict";var n,r=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.UploadComponent=void 0;var c=function(t){function e(e){return t.call(this,e)||this}return r(e,t),e.prototype.render=function(){var t=document.querySelector(this.selector),e=null==t?void 0:t.querySelector("#file");null==e||e.addEventListener("change",(function(e){var o=e.target.files;if(o&&o.length>0){var n=null==t?void 0:t.querySelector(".file-name");n&&(n.textContent=o[0].name)}})),null==t||t.addEventListener("submit",(function(t){t.preventDefault();var e=t.target,o=new FormData(e);return fetch(e.action,{method:"POST",body:o}).then((function(t){return t.text()})).then((function(t){return alert(t)})).catch((function(t){return console.error("[Upload fetch error]:",t.message)})),!1}))},e}(o(11).BaseComponent);e.UploadComponent=c},function(t,e,o){"use strict";var n,r=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.PracticeComponent=void 0;var c=o(10),i=function(t){function e(e,o){void 0===o&&(o=new c.PracticeService);var n=t.call(this,e)||this;return n.practiceService=o,n}return r(e,t),e.prototype.render=function(){document.querySelector(this.selector)&&(this.practiceService.firstFetch(),this.practiceService.firstFetchWithAsyncAwait(),this.practiceService.handleError(),this.practiceService.queryParams(),this.practiceService.httpMethodPost(),this.practiceService.httpMethodGet(),this.practiceService.httpMethodPut(),this.practiceService.httpHeaders(),this.practiceService.httpCookies())},e}(o(11).BaseComponent);e.PracticeComponent=i},function(t,e,o){"use strict";var n=this&&this.__awaiter||function(t,e,o,n){return new(o||(o=Promise))((function(r,c){function i(t){try{a(n.next(t))}catch(t){c(t)}}function s(t){try{a(n.throw(t))}catch(t){c(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(i,s)}a((n=n.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var o,n,r,c,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return c={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c;function s(c){return function(s){return function(c){if(o)throw new TypeError("Generator is already executing.");for(;i;)try{if(o=1,n&&(r=2&c[0]?n.return:c[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,c[1])).done)return r;switch(n=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,n=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!(r=i.trys,(r=r.length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(6===c[0]&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(t,i)}catch(t){c=[6,t],n=0}finally{o=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.PracticeService=void 0;var c=function(){function t(){}return t.prototype.firstFetch=function(){fetch("https://jsonplaceholder.typicode.com/posts").then((function(t){return console.log(typeof t),t.json()})).then((function(t){return console.log(t)}))},t.prototype.firstFetchWithAsyncAwait=function(){n(this,void 0,void 0,(function(){var t;return r(this,(function(e){switch(e.label){case 0:return[4,fetch("https://jsonplaceholder.typicode.com/posts")];case 1:return[4,e.sent().json()];case 2:return t=e.sent(),console.log(t),[2]}}))}))},t.prototype.handleError=function(){fetch("https://jsonplaceholder.typicode.com/pos").then((function(t){if(console.log("Status code: "+t.status),t.status>=200&&t.status<300)return t.json();throw new Error("Error in the fetch request")})).then((function(t){return console.log(t)})).catch((function(t){return console.error("[Fetch error]:",t.message)}))},t.prototype.queryParams=function(){var t={userId:1,_limit:3},e=new URL("https://jsonplaceholder.typicode.com/posts");Object.keys(t).forEach((function(o){e.searchParams.append(o,t[o])})),console.log(e),fetch(e.href).then((function(t){return t.json()})).then((function(t){return console.log(t)}))},t.prototype.httpMethodPost=function(){fetch("https://jsonplaceholder.typicode.com/posts",{method:"POST",body:JSON.stringify({userId:1,title:"foo",body:"bar"}),headers:{"Content-Type":"application/json; charset=UTF-8",Accept:"application/json; charset=UTF-8"}}).then((function(t){return t.json()})).then((function(t){return console.log(t)}))},t.prototype.httpMethodGet=function(){fetch("http://localhost:8000/api/",{method:"GET"}).then((function(t){return t.json()})).then((function(t){return console.log(t)})).catch((function(t){return console.error("[Cors fetch error]:",t.message)}))},t.prototype.httpMethodPut=function(){fetch("http://localhost:8000/api/",{method:"PUT"}).then((function(t){return t.json()})).then((function(t){return console.log(t)})).catch((function(t){return console.error("[Cors fetch error]:",t.message)}))},t.prototype.httpHeaders=function(){fetch("http://localhost:8000/api/",{method:"PUT",headers:{"Content-Type":"application/json; charset=UTF-8",Accept:"application/json; charset=UTF-8",Authentication:"Bearer: xxxxxxxyyyyxxxxyyy"}}).then((function(t){return t.json()})).then((function(t){return console.log(t)})).catch((function(t){return console.error("[Cors fetch error]:",t.message)}))},t.prototype.httpCookies=function(){document.cookie="username=Samuel",fetch("http://localhost:8000/api/",{method:"PUT",headers:{"Content-Type":"application/json; charset=UTF-8",Accept:"application/json; charset=UTF-8",Authentication:"Bearer: xxxxxxxyyyyxxxxyyy"},credentials:"include"}).then((function(t){return t.json()})).then((function(t){return console.log(t)})).catch((function(t){return console.error("[Cors fetch error]:",t.message)}))},t}();e.PracticeService=c},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BaseComponent=void 0;var n=function(){function t(t){this.selector=t.selector}return t.prototype.render=function(t){this.selector&&(document.querySelector(this.selector).innerHTML=null==t?void 0:t.data)},t}();e.BaseComponent=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZpY2VzL3RvLWRvLnNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9uYXYtYmFyLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy90b2RvL3RvLWRvLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaHR0cC1jbGllbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9hcGktY29uZmlnLnRzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3RvZG8vY3JlYXRlLXRvLWRvLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWxzL3Bvc3QudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXBsb2FkLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9wcmFjdGljZS5jb21wb25lbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZpY2VzL3ByYWN0aWNlLnNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvY29tcG9uZW50cy9iYXNlLWNvbXBvbmVudC50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInNlcnZpY2VVUkwiLCJBcGlDb25maWciLCJCQVNFX1VSTCIsInRoaXMiLCJodHRwIiwiSHR0cENsaWVudCIsImdldEFsbCIsImxpbWl0IiwiZmluZCIsInBvc3QiLCJ1cGRhdGUiLCJpZCIsImRlc3Ryb3kiLCJUb0RvU2VydmljZSIsInN0YXJ0IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsIk5hdkJhckNvbXBvbmVudCIsInNlbGVjdG9yIiwicmVuZGVyIiwiUHJhY3RpY2VDb21wb25lbnQiLCJVcGxvYWRDb21wb25lbnQiLCJUb0RvQ29tcG9uZW50IiwiQ3JlYXRlVG9Eb0NvbXBvbmVudCIsIm9wdGlvbnMiLCJmaW5kTmF2QmFyRWxlbWVudHMiLCJBcnJheSIsInNsaWNlIiwicXVlcnlTZWxlY3RvckFsbCIsImhhbmRsZXJOYXZCYXJDbGljayIsIiRuYXYiLCJ0YXJnZXQiLCJkYXRhc2V0IiwiJHRhcmdldCIsImdldEVsZW1lbnRCeUlkIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiJG5hdmJhckJ1cmdlciIsImZvckVhY2giLCJCYXNlQ29tcG9uZW50IiwidG9Eb1NlcnZpY2UiLCJwb3N0cyIsIiRlbGVtZW50IiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJpbm5lckhUTUwiLCJ0ZW1wbGF0ZSIsImUiLCJpbmNsdWRlcyIsIiR0b2RvIiwidXBkYXRlVG9EbyIsInN0YXJ0c1dpdGgiLCJwcmV2ZW50RGVmYXVsdCIsImNsb3Nlc3QiLCJkZWxldGVUb0RvIiwidGl0bGUiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJpbm5lclRleHQiLCJyZW1vdmUiLCJjb250ZW50RWRpdGFibGUiLCJvbmNlIiwiYWRkIiwiZm9jdXMiLCJ1cmwiLCJjb25maWd1cmVSZXF1ZXN0IiwiYm9keSIsIm1ldGhvZCIsImZldGNoIiwiaGVhZGVycyIsIkFjY2VwdCIsInJlc3BvbnNlIiwianNvbiIsIiRmb3JtIiwiJGJ1dHRvbiIsIiR0aXRsZSIsImRpc2FibGVkIiwiUG9zdCIsImRhdGEiLCJuZXdQb3N0IiwiY3JlYXRlRWxlbWVudCIsInByZXBlbmQiLCJ1c2VySWQiLCIkZmlsZSIsImZpbGVzIiwibGVuZ3RoIiwiJGZpbGVuYW1lIiwidGV4dENvbnRlbnQiLCJGb3JtRGF0YSIsImFjdGlvbiIsInRleHQiLCJhbGVydCIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJtZXNzYWdlIiwicHJhY3RpY2VTZXJ2aWNlIiwiUHJhY3RpY2VTZXJ2aWNlIiwiZmlyc3RGZXRjaCIsImZpcnN0RmV0Y2hXaXRoQXN5bmNBd2FpdCIsImhhbmRsZUVycm9yIiwicXVlcnlQYXJhbXMiLCJodHRwTWV0aG9kUG9zdCIsImh0dHBNZXRob2RHZXQiLCJodHRwTWV0aG9kUHV0IiwiaHR0cEhlYWRlcnMiLCJodHRwQ29va2llcyIsInN0YXR1cyIsIkVycm9yIiwiX2xpbWl0IiwiVVJMIiwia2V5cyIsInBhcmFtS2V5Iiwic2VhcmNoUGFyYW1zIiwiYXBwZW5kIiwiaHJlZiIsIkF1dGhlbnRpY2F0aW9uIiwiY29va2llIiwiY3JlZGVudGlhbHMiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFF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ckMsTUFBTSw2QkFBOEIsQ0FDbENELE9BQVEsTUFDUkUsUUFBUyxDQUNQLGVBQWdCLGtDQUNoQkMsT0FBUSxrQ0FDUjhDLGVBQWdCLGdDQUdqQnpFLE1BQUssU0FBQzRCLEdBQXVCLE9BQUFBLEVBQVNDLFVBQ3RDN0IsTUFBSyxTQUFDbUMsR0FBUyxPQUFBaEUsUUFBUUMsSUFBSStELE1BQzNCYyxPQUFNLFNBQUNDLEdBQWUsT0FBQS9FLFFBQVFnRixNQUFNLHNCQUF1QkQsRUFBSUUsYUFHN0QsWUFBQVcsWUFBUCxXQUVFOUYsU0FBU3lHLE9BQVMsa0JBQ2xCakQsTUFBTSw2QkFBOEIsQ0FDbENELE9BQVEsTUFDUkUsUUFBUyxDQUNQLGVBQWdCLGtDQUNoQkMsT0FBUSxrQ0FDUjhDLGVBQWdCLDhCQUVsQkUsWUFBYSxZQU9aM0UsTUFBSyxTQUFDNEIsR0FBdUIsT0FBQUEsRUFBU0MsVUFDdEM3QixNQUFLLFNBQUNtQyxHQUFTLE9BQUFoRSxRQUFRQyxJQUFJK0QsTUFDM0JjLE9BQU0sU0FBQ0MsR0FBZSxPQUFBL0UsUUFBUWdGLE1BQU0sc0JBQXVCRCxFQUFJRSxhQUV0RSxFQTVIQSxHQUFhLEVBQUFFLG1CLHFHQ0FiLGlCQUdFLFdBQVkxRSxHQUNWdkIsS0FBS2lCLFNBQVdNLEVBQVFOLFNBYzVCLE9BWEUsWUFBQUMsT0FBQSxTQUFPSyxHQUNEdkIsS0FBS2lCLFdBQzBCTCxTQUFTOEIsY0FBYzFDLEtBQUtpQixVQUtuRDJCLFVBQVlyQixhQUFPLEVBQVBBLEVBQVN1RCxPQUlyQyxFQWxCQSxHQUFhLEVBQUF4QyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iLCJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnLi4vdXRpbHMvaHR0cC1jbGllbnQnO1xuaW1wb3J0IHsgQXBpQ29uZmlnIH0gZnJvbSAnLi4vY29uZmlnL2FwaS1jb25maWcnO1xuaW1wb3J0IHsgUG9zdCB9IGZyb20gJy4uL21vZGVscy9wb3N0JztcblxuZXhwb3J0IGNsYXNzIFRvRG9TZXJ2aWNlIHtcbiAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50O1xuICBwcml2YXRlIHNlcnZpY2VVUkw6IHN0cmluZyA9IGAke0FwaUNvbmZpZy5CQVNFX1VSTH0vdG9kb3MvYDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmh0dHAgPSBuZXcgSHR0cENsaWVudCgpO1xuICB9XG5cbiAgZ2V0QWxsKGxpbWl0OiBudW1iZXIgPSAyMCk6IFByb21pc2U8QXJyYXk8UG9zdD4+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldChgJHt0aGlzLnNlcnZpY2VVUkx9P19saW1pdD0ke2xpbWl0fWApO1xuICB9XG5cbiAgZmluZCgpIHt9XG5cbiAgY3JlYXRlKHBvc3Q6IFBvc3QpIHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYCR7dGhpcy5zZXJ2aWNlVVJMfWAsIHBvc3QpO1xuICB9XG5cbiAgdXBkYXRlKHBvc3Q6IFBvc3QpIHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnVwZGF0ZShgJHt0aGlzLnNlcnZpY2VVUkx9JHtwb3N0LmlkfWAsIHBvc3QpO1xuICB9XG5cbiAgZGVzdHJveShwb3N0OiBQb3N0KSB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5kZXN0cm95KGAke3RoaXMuc2VydmljZVVSTH0ke3Bvc3QuaWR9YCk7XG4gIH1cbn1cbiIsImltcG9ydCB7IE5hdkJhckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jb21tb24vbmF2LWJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVG9Eb0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90b2RvL3RvLWRvLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDcmVhdGVUb0RvQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RvZG8vY3JlYXRlLXRvLWRvLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBVcGxvYWRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdXBsb2FkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcmFjdGljZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wcmFjdGljZS5jb21wb25lbnQnO1xuXG5jbGFzcyBBcHAge1xuICBzdGFydCgpOiB2b2lkIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJz4+IFN0YXJ0IGFwcCcpO1xuICAgICAgbmV3IE5hdkJhckNvbXBvbmVudCh7IHNlbGVjdG9yOiAnLm5hdmJhci1idXJnZXInIH0pLnJlbmRlcigpO1xuICAgICAgbmV3IFByYWN0aWNlQ29tcG9uZW50KHsgc2VsZWN0b3I6ICcjcHJhY3RpY2VzJyB9KS5yZW5kZXIoKTtcbiAgICAgIG5ldyBVcGxvYWRDb21wb25lbnQoeyBzZWxlY3RvcjogJyNmcm0tdXBsb2FkJyB9KS5yZW5kZXIoKTtcblxuICAgICAgbmV3IFRvRG9Db21wb25lbnQoeyBzZWxlY3RvcjogJyN0by1kby1jb250YWluZXInIH0pLnJlbmRlcigpO1xuICAgICAgbmV3IENyZWF0ZVRvRG9Db21wb25lbnQoeyBzZWxlY3RvcjogJyNmcm0tY3JlYXRlLXBvc3QnIH0pLnJlbmRlcigpO1xuICAgIH0pO1xuICB9XG59XG5cbm5ldyBBcHAoKS5zdGFydCgpO1xuIiwiaW1wb3J0IHsgQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvcmUvY29tcG9uZW50cy9iYXNlLWNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21wb25lbnRPcHRpb24gfSBmcm9tICcuLi8uLi9jb3JlL29wdGlvbnMvY29tcG9uZW50LW9wdGlvbic7XG5pbXBvcnQgeyBSZW5kZXJlZENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvcmUvY29tcG9uZW50cy9yZW5kZXJlZC1jb21wb25lbnQnO1xuXG5jb25zdCBERUZBVUxUX1RBUkdFVCA9ICduYXZNZW51JztcbmNvbnN0IE5BVl9UT0dHTEVfQ0xBU1MgPSAnaXMtYWN0aXZlJztcblxuZXhwb3J0IGNsYXNzIE5hdkJhckNvbXBvbmVudFxuICBleHRlbmRzIEJhc2VDb21wb25lbnRcbiAgaW1wbGVtZW50cyBSZW5kZXJlZENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM6IENvbXBvbmVudE9wdGlvbikge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICB9XG5cbiAgcHJpdmF0ZSBmaW5kTmF2QmFyRWxlbWVudHMoKTogQXJyYXk8SFRNTEVsZW1lbnQ+IHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuc2VsZWN0b3IpLFxuICAgICAgMFxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZXJOYXZCYXJDbGljaygkbmF2OiBIVE1MRWxlbWVudCkge1xuICAgICRuYXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAvLyBHZXQgdGhlIHRhcmdldCBmcm9tIHRoZSBcImRhdGEtdGFyZ2V0XCIgYXR0cmlidXRlXG4gICAgICBjb25zdCB0YXJnZXQgPSAkbmF2LmRhdGFzZXQudGFyZ2V0IHx8IERFRkFVTFRfVEFSR0VUO1xuICAgICAgY29uc3QgJHRhcmdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldCk7XG5cbiAgICAgIC8vIFRvZ2dsZSB0aGUgXCJpcy1hY3RpdmVcIiBjbGFzcyBvbiBib3RoIHRoZSBcIm5hdmJhci1idXJnZXJcIiBhbmQgdGhlIFwibmF2YmFyLW1lbnVcIlxuICAgICAgJG5hdi5jbGFzc0xpc3QudG9nZ2xlKE5BVl9UT0dHTEVfQ0xBU1MpO1xuICAgICAgJHRhcmdldD8uY2xhc3NMaXN0LnRvZ2dsZShOQVZfVE9HR0xFX0NMQVNTKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpOiB2b2lkIHtcbiAgICAvLyBHZXQgYWxsIFwibmF2YmFyLWJ1cmdlclwiIGVsZW1lbnRzXG4gICAgY29uc3QgJG5hdmJhckJ1cmdlciA9IHRoaXMuZmluZE5hdkJhckVsZW1lbnRzKCk7XG5cbiAgICAvLyBDaGVjayBpZiB0aGVyZSBhcmUgYW55IG5hdmJhciBidXJnZXJzXG4gICAgLy8gaWYgKCRuYXZiYXJCdXJnZXJzLmxlbmd0aCA+IDApIHtcbiAgICAvLyBBZGQgYSBjbGljayBldmVudCBvbiBlYWNoIG9mIHRoZW1cbiAgICAkbmF2YmFyQnVyZ2VyPy5mb3JFYWNoKHRoaXMuaGFuZGxlck5hdkJhckNsaWNrKTtcbiAgICAvLyB9XG4gIH1cbn1cbiIsImltcG9ydCB7IFRvRG9TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdG8tZG8uc2VydmljZSc7XG5pbXBvcnQgeyBSZW5kZXJlZENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvcmUvY29tcG9uZW50cy9yZW5kZXJlZC1jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tcG9uZW50T3B0aW9uIH0gZnJvbSAnLi4vLi4vY29yZS9vcHRpb25zL2NvbXBvbmVudC1vcHRpb24nO1xuaW1wb3J0IHsgUG9zdCB9IGZyb20gJy4uLy4uL21vZGVscy9wb3N0JztcblxuZXhwb3J0IGNsYXNzIFRvRG9Db21wb25lbnQgaW1wbGVtZW50cyBSZW5kZXJlZENvbXBvbmVudCB7XG4gIHByaXZhdGUgcG9zdHM6IEFycmF5PFBvc3Q+ID0gW107XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgb3B0aW9uczogQ29tcG9uZW50T3B0aW9uLFxuICAgIHByaXZhdGUgdG9Eb1NlcnZpY2U6IFRvRG9TZXJ2aWNlID0gbmV3IFRvRG9TZXJ2aWNlKClcbiAgKSB7fVxuXG4gIHJlbmRlcigpOiB2b2lkIHtcbiAgICBjb25zdCAkZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5vcHRpb25zLnNlbGVjdG9yKTtcbiAgICBpZiAoJGVsZW1lbnQpIHtcbiAgICAgIHRoaXMudG9Eb1NlcnZpY2UuZ2V0QWxsKCkudGhlbigocG9zdHM6IEFycmF5PFBvc3Q+KSA9PiB7XG4gICAgICAgIHRoaXMucG9zdHMgPSBwb3N0cztcbiAgICAgICAgJGVsZW1lbnQhLmlubmVySFRNTCA9IHRoaXMudGVtcGxhdGUoKTtcblxuICAgICAgICAvLyBFZGl0IHRleHRcbiAgICAgICAgJGVsZW1lbnQ/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgdGFyZ2V0ID0gPEhUTUxFbGVtZW50PmUudGFyZ2V0O1xuICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LnZhbHVlLmluY2x1ZGVzKCdjb250ZW50JykpIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRhcmdldCk7XG4gICAgICAgICAgICBjb25zdCAkdG9kbzogSFRNTEVsZW1lbnQgfCBudWxsID1cbiAgICAgICAgICAgICAgdGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50JykgfHwgdGFyZ2V0O1xuICAgICAgICAgICAgdGhpcy51cGRhdGVUb0RvKCR0b2RvKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHRhcmdldC5jbGFzc0xpc3QudmFsdWUuc3RhcnRzV2l0aCgnY2FyZC1mb290ZXItaXRlbScpKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCAkdG9kbzogSFRNTEVsZW1lbnQgPSA8SFRNTEVsZW1lbnQ+KFxuICAgICAgICAgICAgICB0YXJnZXQuY2xvc2VzdCgnYXJ0aWNsZScpPy5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdGhpcy5kZWxldGVUb0RvKCR0b2RvKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgdGVtcGxhdGUoKTogc3RyaW5nIHtcbiAgICBsZXQgdGVtcGxhdGU6IHN0cmluZyA9ICcnO1xuICAgIHRoaXMucG9zdHMuZm9yRWFjaCgocG9zdDogUG9zdCkgPT4ge1xuICAgICAgdGVtcGxhdGUgKz0gYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTEyXCI+XG4gICAgICAgICAgPGFydGljbGUgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1jb250ZW50XCI+XG4gICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiY29udGVudFwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtaWQ9XCIke3Bvc3QuaWR9XCJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10aXRsZT1cIiR7cG9zdC50aXRsZX1cIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLXBvc3Q9JyR7SlNPTi5zdHJpbmdpZnkocG9zdCl9Jz5cbiAgICAgICAgICAgICAgICAke3Bvc3QudGl0bGV9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8Zm9vdGVyIGNsYXNzPVwiY2FyZC1mb290ZXJcIj5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cImNhcmQtZm9vdGVyLWl0ZW1cIj5EZWxldGU8L2E+XG4gICAgICAgICAgICA8L2Zvb3Rlcj5cbiAgICAgICAgICA8L2FydGljbGU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgYDtcbiAgICB9KTtcbiAgICByZXR1cm4gdGVtcGxhdGU7XG4gIH1cblxuICB1cGRhdGVUb0RvKCR0b2RvOiBIVE1MRWxlbWVudCkge1xuICAgICR0b2RvIS5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgJ2JsdXInLFxuICAgICAgKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhcmdldDogSFRNTEVsZW1lbnQgPSA8SFRNTEVsZW1lbnQ+ZS50YXJnZXQ7XG4gICAgICAgIC8vIGNvbnNvbGUuZGlyKHRhcmdldC5pbm5lclRleHQpO1xuICAgICAgICAvLyBjb25zb2xlLmRpcih0YXJnZXQuZGF0YXNldC5pZCk7XG4gICAgICAgIC8vIGNvbnNvbGUuZGlyKEpTT04ucGFyc2UoPHN0cmluZz50YXJnZXQuZGF0YXNldC5wb3N0KSk7XG4gICAgICAgIGNvbnN0IHBvc3Q6IFBvc3QgPSBKU09OLnBhcnNlKDxzdHJpbmc+dGFyZ2V0LmRhdGFzZXQucG9zdCk7XG4gICAgICAgIHBvc3QudGl0bGUgPSB0YXJnZXQuaW5uZXJUZXh0O1xuICAgICAgICB0aGlzLnRvRG9TZXJ2aWNlLnVwZGF0ZShwb3N0KTtcblxuICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgncHgtNCcsICdweS00Jyk7XG4gICAgICAgIHRhcmdldC5jb250ZW50RWRpdGFibGUgPSAnZmFsc2UnO1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgb25jZTogdHJ1ZSxcbiAgICAgIH1cbiAgICApO1xuICAgICR0b2RvIS5jbGFzc0xpc3QuYWRkKCdweC00JywgJ3B5LTQnKTtcbiAgICAkdG9kbyEuY29udGVudEVkaXRhYmxlID0gJ3RydWUnO1xuICAgICR0b2RvIS5mb2N1cygpO1xuICB9XG5cbiAgZGVsZXRlVG9EbygkdG9kbzogSFRNTEVsZW1lbnQpIHtcbiAgICBjb25zdCBwb3N0OiBQb3N0ID0gSlNPTi5wYXJzZSg8c3RyaW5nPiR0b2RvLmRhdGFzZXQucG9zdCk7XG4gICAgdGhpcy50b0RvU2VydmljZS5kZXN0cm95KHBvc3QpO1xuICAgICR0b2RvLmNsb3Nlc3QoJ2Rpdi5jb2x1bW4nKT8ucmVtb3ZlKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBIdHRwQ2xpZW50IHtcbiAgZ2V0KHVybDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gSHR0cENsaWVudC5jb25maWd1cmVSZXF1ZXN0KHVybCwgJ0dFVCcpO1xuICB9XG5cbiAgZGVzdHJveSh1cmw6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIEh0dHBDbGllbnQuY29uZmlndXJlUmVxdWVzdCh1cmwsICdERUxFVEUnKTtcbiAgfVxuXG4gIHBvc3QodXJsOiBzdHJpbmcsIGJvZHk6IG9iamVjdCB8IG51bGwgPSBudWxsKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gSHR0cENsaWVudC5jb25maWd1cmVSZXF1ZXN0KHVybCwgJ1BPU1QnLCBib2R5KTtcbiAgfVxuXG4gIHVwZGF0ZSh1cmw6IHN0cmluZywgYm9keTogb2JqZWN0IHwgbnVsbCA9IG51bGwpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBIdHRwQ2xpZW50LmNvbmZpZ3VyZVJlcXVlc3QodXJsLCAnUFVUJywgYm9keSk7XG4gIH1cblxuICBzdGF0aWMgY29uZmlndXJlUmVxdWVzdChcbiAgICB1cmw6IHN0cmluZyxcbiAgICBtZXRob2Q6IHN0cmluZyxcbiAgICBib2R5OiBvYmplY3QgfCBudWxsID0gbnVsbFxuICApOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBmZXRjaCh1cmwsIHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyxcbiAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcsXG4gICAgICB9LFxuICAgIH0pLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIEFwaUNvbmZpZyB7XG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQkFTRV9VUkw6IHN0cmluZyA9XG4gICAgJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbSc7XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnRPcHRpb24gfSBmcm9tICcuLi8uLi9jb3JlL29wdGlvbnMvY29tcG9uZW50LW9wdGlvbic7XG5pbXBvcnQgeyBUb0RvU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RvLWRvLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmVuZGVyZWRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jb3JlL2NvbXBvbmVudHMvcmVuZGVyZWQtY29tcG9uZW50JztcbmltcG9ydCB7IFBvc3QgfSBmcm9tICcuLi8uLi9tb2RlbHMvcG9zdCc7XG5cbmV4cG9ydCBjbGFzcyBDcmVhdGVUb0RvQ29tcG9uZW50IGltcGxlbWVudHMgUmVuZGVyZWRDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIG9wdGlvbnM6IENvbXBvbmVudE9wdGlvbixcbiAgICBwcml2YXRlIHRvRG9TZXJ2aWNlOiBUb0RvU2VydmljZSA9IG5ldyBUb0RvU2VydmljZSgpXG4gICkge31cbiAgcmVuZGVyKCk6IHZvaWQge1xuICAgIGNvbnN0ICRmb3JtOiBIVE1MRm9ybUVsZW1lbnQgPSA8SFRNTEZvcm1FbGVtZW50PihcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5vcHRpb25zLnNlbGVjdG9yKVxuICAgICk7XG4gICAgaWYgKCRmb3JtKSB7XG4gICAgICAkZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCAkYnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCA9IDxIVE1MQnV0dG9uRWxlbWVudD4oXG4gICAgICAgICAgJGZvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uJylcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgJHRpdGxlOiBIVE1MVGV4dEFyZWFFbGVtZW50ID0gPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KFxuICAgICAgICAgICRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhJylcbiAgICAgICAgKTtcblxuICAgICAgICAkdGl0bGUuY2xvc2VzdCgnLmNvbnRyb2wnKT8uY2xhc3NMaXN0LmFkZCgnaXMtbG9hZGluZycpO1xuICAgICAgICAkYnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcblxuICAgICAgICBjb25zdCBwb3N0OiBQb3N0ID0gbmV3IFBvc3QoJHRpdGxlLnZhbHVlKTtcbiAgICAgICAgdGhpcy50b0RvU2VydmljZS5jcmVhdGUocG9zdCkudGhlbigoZGF0YTogUG9zdCkgPT4ge1xuICAgICAgICAgICR0aXRsZS5jbG9zZXN0KCcuY29udHJvbCcpPy5jbGFzc0xpc3QucmVtb3ZlKCdpcy1sb2FkaW5nJyk7XG4gICAgICAgICAgJGJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICR0aXRsZS52YWx1ZSA9ICcnO1xuXG4gICAgICAgICAgcG9zdC5pZCA9IGRhdGEuaWQ7XG4gICAgICAgICAgbGV0IHRlbXBsYXRlOiBzdHJpbmcgPSBgXG4gICAgICAgICAgPGFydGljbGUgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1jb250ZW50XCI+XG4gICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiY29udGVudFwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtaWQ9XCIke3Bvc3QuaWR9XCJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10aXRsZT1cIiR7cG9zdC50aXRsZX1cIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLXBvc3Q9JyR7SlNPTi5zdHJpbmdpZnkocG9zdCl9Jz5cbiAgICAgICAgICAgICAgICAke3Bvc3QudGl0bGV9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8Zm9vdGVyIGNsYXNzPVwiY2FyZC1mb290ZXJcIj5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cImNhcmQtZm9vdGVyLWl0ZW1cIj5EZWxldGU8L2E+XG4gICAgICAgICAgICA8L2Zvb3Rlcj5cbiAgICAgICAgICA8L2FydGljbGU+XG4gICAgICBgO1xuICAgICAgICAgIGxldCBuZXdQb3N0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgbmV3UG9zdC5jbGFzc0xpc3QuYWRkKCdjb2x1bW4nLCAnaXMtMTInKTtcbiAgICAgICAgICBuZXdQb3N0LmlubmVySFRNTCA9IHRlbXBsYXRlO1xuICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0by1kby1jb250YWluZXInKT8ucHJlcGVuZChuZXdQb3N0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFBvc3Qge1xuICB1c2VySWQ6IG51bWJlciA9IDA7XG4gIGlkPzogbnVtYmVyID0gMDtcbiAgdGl0bGU6IHN0cmluZyA9ICcnO1xuICBib2R5OiBzdHJpbmcgPSAnJztcblxuICBjb25zdHJ1Y3Rvcih0aXRsZTogc3RyaW5nKSB7XG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnRPcHRpb24gfSBmcm9tICcuLi9jb3JlL29wdGlvbnMvY29tcG9uZW50LW9wdGlvbic7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi4vY29yZS9jb21wb25lbnRzL2Jhc2UtY29tcG9uZW50JztcbmltcG9ydCB7IFJlbmRlcmVkQ29tcG9uZW50IH0gZnJvbSAnLi4vY29yZS9jb21wb25lbnRzL3JlbmRlcmVkLWNvbXBvbmVudCc7XG5cbmV4cG9ydCBjbGFzcyBVcGxvYWRDb21wb25lbnRcbiAgZXh0ZW5kcyBCYXNlQ29tcG9uZW50XG4gIGltcGxlbWVudHMgUmVuZGVyZWRDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBDb21wb25lbnRPcHRpb24pIHtcbiAgICBzdXBlcihvcHRpb25zKTtcbiAgfVxuXG4gIHJlbmRlcigpOiB2b2lkIHtcbiAgICBjb25zdCAkZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3Rvcik7XG5cbiAgICBjb25zdCAkZmlsZSA9IDxIVE1MSW5wdXRFbGVtZW50PiRmb3JtPy5xdWVyeVNlbGVjdG9yKCcjZmlsZScpO1xuICAgICRmaWxlPy5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZTogRXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGZpbGVzID0gKDxIVE1MSW5wdXRFbGVtZW50PmUudGFyZ2V0KS5maWxlczsgLy8gJGZpbGVzLmZpbGVzXG4gICAgICBpZiAoZmlsZXMgJiYgZmlsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCAkZmlsZW5hbWUgPSAkZm9ybT8ucXVlcnlTZWxlY3RvcignLmZpbGUtbmFtZScpO1xuICAgICAgICBpZiAoJGZpbGVuYW1lKSB7XG4gICAgICAgICAgJGZpbGVuYW1lLnRleHRDb250ZW50ID0gZmlsZXNbMF0ubmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgJGZvcm0/LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlOiBFdmVudCkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgdGFyZ2V0OiBIVE1MRm9ybUVsZW1lbnQgPSA8SFRNTEZvcm1FbGVtZW50PmUudGFyZ2V0O1xuXG4gICAgICBjb25zdCBib2R5ID0gbmV3IEZvcm1EYXRhKHRhcmdldCk7XG4gICAgICAvLyBjb25zdCBmaWxlID0gKDxIVE1MSW5wdXRFbGVtZW50PiRmb3JtLnF1ZXJ5U2VsZWN0b3IoJyNmaWxlJykpLmZpbGVzO1xuICAgICAgLy8gY29uc29sZS5sb2coZmlsZSk7XG4gICAgICAvLyBpZiAoZmlsZSkge1xuICAgICAgLy8gICBib2R5LmFwcGVuZCgnZmlsZScsIGZpbGVbMF0pO1xuICAgICAgLy8gfVxuXG4gICAgICBmZXRjaCh0YXJnZXQuYWN0aW9uLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBib2R5LFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UudGV4dCgpKVxuICAgICAgICAudGhlbigoZGF0YTogc3RyaW5nKSA9PiBhbGVydChkYXRhKSlcbiAgICAgICAgLmNhdGNoKChlcnI6IEVycm9yKSA9PlxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tVcGxvYWQgZmV0Y2ggZXJyb3JdOicsIGVyci5tZXNzYWdlKVxuICAgICAgICApO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnRPcHRpb24gfSBmcm9tICcuLi9jb3JlL29wdGlvbnMvY29tcG9uZW50LW9wdGlvbic7XG5pbXBvcnQgeyBQcmFjdGljZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wcmFjdGljZS5zZXJ2aWNlJztcbmltcG9ydCB7IEJhc2VDb21wb25lbnQgfSBmcm9tICcuLi9jb3JlL2NvbXBvbmVudHMvYmFzZS1jb21wb25lbnQnO1xuaW1wb3J0IHsgUmVuZGVyZWRDb21wb25lbnQgfSBmcm9tICcuLi9jb3JlL2NvbXBvbmVudHMvcmVuZGVyZWQtY29tcG9uZW50JztcblxuZXhwb3J0IGNsYXNzIFByYWN0aWNlQ29tcG9uZW50XG4gIGV4dGVuZHMgQmFzZUNvbXBvbmVudFxuICBpbXBsZW1lbnRzIFJlbmRlcmVkQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgb3B0aW9uczogQ29tcG9uZW50T3B0aW9uLFxuICAgIHByaXZhdGUgcHJhY3RpY2VTZXJ2aWNlOiBQcmFjdGljZVNlcnZpY2UgPSBuZXcgUHJhY3RpY2VTZXJ2aWNlKClcbiAgKSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gIH1cblxuICByZW5kZXIoKTogdm9pZCB7XG4gICAgY29uc3QgJHByYWN0aWNlOiBIVE1MRm9ybUVsZW1lbnQgfCBudWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuc2VsZWN0b3JcbiAgICApO1xuICAgIGlmICgkcHJhY3RpY2UpIHtcbiAgICAgIHRoaXMucHJhY3RpY2VTZXJ2aWNlLmZpcnN0RmV0Y2goKTtcbiAgICAgIHRoaXMucHJhY3RpY2VTZXJ2aWNlLmZpcnN0RmV0Y2hXaXRoQXN5bmNBd2FpdCgpO1xuICAgICAgdGhpcy5wcmFjdGljZVNlcnZpY2UuaGFuZGxlRXJyb3IoKTtcbiAgICAgIHRoaXMucHJhY3RpY2VTZXJ2aWNlLnF1ZXJ5UGFyYW1zKCk7XG4gICAgICB0aGlzLnByYWN0aWNlU2VydmljZS5odHRwTWV0aG9kUG9zdCgpO1xuICAgICAgdGhpcy5wcmFjdGljZVNlcnZpY2UuaHR0cE1ldGhvZEdldCgpO1xuICAgICAgdGhpcy5wcmFjdGljZVNlcnZpY2UuaHR0cE1ldGhvZFB1dCgpO1xuICAgICAgdGhpcy5wcmFjdGljZVNlcnZpY2UuaHR0cEhlYWRlcnMoKTtcbiAgICAgIHRoaXMucHJhY3RpY2VTZXJ2aWNlLmh0dHBDb29raWVzKCk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBQb3N0IH0gZnJvbSAnLi4vbW9kZWxzL3Bvc3QnO1xuXG5leHBvcnQgY2xhc3MgUHJhY3RpY2VTZXJ2aWNlIHtcbiAgcHVibGljIGZpcnN0RmV0Y2goKSB7XG4gICAgZmV0Y2goJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycpXG4gICAgICAudGhlbigocmVzcG9uc2U6IFJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiByZXNwb25zZSk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICB9KSAvLyByZXNwb25zZTogVWludDhBcnJheVxuICAgICAgLnRoZW4oKHBvc3RzOiBBcnJheTxQb3N0PikgPT4gY29uc29sZS5sb2cocG9zdHMpKTtcbiAgfVxuXG4gIHB1YmxpYyBmaXJzdEZldGNoV2l0aEFzeW5jQXdhaXQoKSB7XG4gICAgKGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlOiBSZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgICAgICAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzJ1xuICAgICAgKTtcbiAgICAgIGNvbnN0IGJvZHk6IEFycmF5PFBvc3Q+ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgY29uc29sZS5sb2coYm9keSk7XG4gICAgfSkoKTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVFcnJvcigpIHtcbiAgICAvLyBIYW5kbGUgZXJyb3JcbiAgICBmZXRjaCgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3BvcycpXG4gICAgICAudGhlbigocmVzcG9uc2U6IFJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBTdGF0dXMgY29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPj0gMjAwICYmIHJlc3BvbnNlLnN0YXR1cyA8IDMwMCkge1xuICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBpbiB0aGUgZmV0Y2ggcmVxdWVzdCcpO1xuICAgICAgICB9XG4gICAgICB9KSAvLyByZXNwb25zZTogVWludDhBcnJheVxuICAgICAgLnRoZW4oKHBvc3RzOiBBcnJheTxQb3N0PikgPT4gY29uc29sZS5sb2cocG9zdHMpKVxuICAgICAgLmNhdGNoKChlcnI6IEVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdbRmV0Y2ggZXJyb3JdOicsIGVyci5tZXNzYWdlKSk7XG4gIH1cblxuICBwdWJsaWMgcXVlcnlQYXJhbXMoKSB7XG4gICAgLy8gUXVlcnkgcGFyYW1zXG4gICAgLy8gUmVhZCBtb3JlIG9uOiBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jZmV0Y2gtYXBpXG4gICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7XG4gICAgICB1c2VySWQ6IDEsXG4gICAgICBfbGltaXQ6IDMsXG4gICAgfTtcbiAgICBjb25zdCB1cmw6IFVSTCA9IG5ldyBVUkwoJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycpO1xuICAgIE9iamVjdC5rZXlzKHF1ZXJ5UGFyYW1zKS5mb3JFYWNoKChwYXJhbUtleTogc3RyaW5nKSA9PiB7XG4gICAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZChwYXJhbUtleSwgcXVlcnlQYXJhbXNbcGFyYW1LZXldKTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyh1cmwpO1xuICAgIGZldGNoKHVybC5ocmVmKVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKSAvLyByZXNwb25zZTogVWludDhBcnJheVxuICAgICAgLnRoZW4oKHBvc3RzOiBBcnJheTxQb3N0PikgPT4gY29uc29sZS5sb2cocG9zdHMpKTtcbiAgfVxuXG4gIHB1YmxpYyBodHRwTWV0aG9kUG9zdCgpIHtcbiAgICAvLyBIVFRQIC0gTWV0aG9kc1xuICAgIC8vIFJlYWQgbW9yZSBvbjogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZXMvZG9jcy9XZWIvSFRUUC9NZXRob2RzXG5cbiAgICAvLyBQT1NUXG4gICAgY29uc3QgcG9zdDogUG9zdCA9IHtcbiAgICAgIHVzZXJJZDogMSxcbiAgICAgIHRpdGxlOiAnZm9vJyxcbiAgICAgIGJvZHk6ICdiYXInLFxuICAgIH07XG4gICAgZmV0Y2goJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocG9zdCksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcsXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKSAvLyByZXNwb25zZTogVWludDhBcnJheVxuICAgICAgLnRoZW4oKHBvc3Q6IFBvc3QpID0+IGNvbnNvbGUubG9nKHBvc3QpKTtcbiAgfVxuXG4gIHB1YmxpYyBodHRwTWV0aG9kR2V0KCkge1xuICAgIGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpLycsIHsgbWV0aG9kOiAnR0VUJyB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgLnRoZW4oKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICAgICAgLmNhdGNoKChlcnI6IEVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdbQ29ycyBmZXRjaCBlcnJvcl06JywgZXJyLm1lc3NhZ2UpKTtcbiAgfVxuXG4gIHB1YmxpYyBodHRwTWV0aG9kUHV0KCkge1xuICAgIGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpLycsIHsgbWV0aG9kOiAnUFVUJyB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgLnRoZW4oKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICAgICAgLmNhdGNoKChlcnI6IEVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdbQ29ycyBmZXRjaCBlcnJvcl06JywgZXJyLm1lc3NhZ2UpKTtcbiAgfVxuXG4gIHB1YmxpYyBodHRwSGVhZGVycygpIHtcbiAgICAvLyBIZWFkZXJzXG4gICAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvJywge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyxcbiAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcsXG4gICAgICAgIEF1dGhlbnRpY2F0aW9uOiAnQmVhcmVyOiB4eHh4eHh4eXl5eXh4eHh5eXknLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBSZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgLnRoZW4oKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICAgICAgLmNhdGNoKChlcnI6IEVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdbQ29ycyBmZXRjaCBlcnJvcl06JywgZXJyLm1lc3NhZ2UpKTtcbiAgfVxuXG4gIHB1YmxpYyBodHRwQ29va2llcygpIHtcbiAgICAvLyBDb29raWVzXG4gICAgZG9jdW1lbnQuY29va2llID0gJ3VzZXJuYW1lPVNhbXVlbCc7XG4gICAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvJywge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyxcbiAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcsXG4gICAgICAgIEF1dGhlbnRpY2F0aW9uOiAnQmVhcmVyOiB4eHh4eHh4eXl5eXh4eHh5eXknLFxuICAgICAgfSxcbiAgICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsXG4gICAgICAvKipcbiAgICAgICAqIG9taXQ6IE5ldmVyIHNlbmQgb3IgcmVjZWl2ZSBjb29raWVzLlxuICAgICAgICogc2FtZS1vcmlnaW46IFNlbmQgdXNlciBjcmVkZW50aWFscyAoY29va2llcywgYmFzaWMgaHR0cCBhdXRoLCBldGMuLikgaWYgdGhlIFVSTCBpcyBvbiB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGNhbGxpbmcgc2NyaXB0LiBUaGlzIGlzIHRoZSBkZWZhdWx0IHZhbHVlLlxuICAgICAgICogaW5jbHVkZTogQWx3YXlzIHNlbmQgdXNlciBjcmVkZW50aWFscyAoY29va2llcywgYmFzaWMgaHR0cCBhdXRoLCBldGMuLiksIGV2ZW4gZm9yIGNyb3NzLW9yaWdpbiBjYWxscy5cbiAgICAgICAqL1xuICAgIH0pXG4gICAgICAudGhlbigocmVzcG9uc2U6IFJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAudGhlbigoZGF0YSkgPT4gY29uc29sZS5sb2coZGF0YSkpXG4gICAgICAuY2F0Y2goKGVycjogRXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoJ1tDb3JzIGZldGNoIGVycm9yXTonLCBlcnIubWVzc2FnZSkpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnRPcHRpb24gfSBmcm9tICcuLi9vcHRpb25zL2NvbXBvbmVudC1vcHRpb24nO1xuXG5leHBvcnQgY2xhc3MgQmFzZUNvbXBvbmVudCB7XG4gIHByb3RlY3RlZCBzZWxlY3Rvcjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM6IENvbXBvbmVudE9wdGlvbikge1xuICAgIHRoaXMuc2VsZWN0b3IgPSBvcHRpb25zLnNlbGVjdG9yO1xuICB9XG5cbiAgcmVuZGVyKG9wdGlvbnM6IGFueSk6IHZvaWQge1xuICAgIGlmICh0aGlzLnNlbGVjdG9yKSB7XG4gICAgICBjb25zdCAkZWxlbWVudDogRWxlbWVudCB8IG51bGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2VsZWN0b3IpO1xuICAgICAgLy8gaWYgKCRlbGVtZW50KSB7XG4gICAgICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvZG9jcy9oYW5kYm9vay9yZWxlYXNlLW5vdGVzL3R5cGVzY3JpcHQtMy03Lmh0bWwjb3B0aW9uYWwtY2hhaW5pbmdcbiAgICAgIC8vIGh0dHBzOi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy9kb2NzL2hhbmRib29rL3JlbGVhc2Utbm90ZXMvdHlwZXNjcmlwdC0yLTAuaHRtbCNub24tbnVsbC1hc3NlcnRpb24tb3BlcmF0b3JcbiAgICAgIC8vIGh0dHBzOi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy9kb2NzL2hhbmRib29rL3JlbGVhc2Utbm90ZXMvdHlwZXNjcmlwdC0zLTkuaHRtbCNwYXJzaW5nLWRpZmZlcmVuY2VzLWluLW9wdGlvbmFsLWNoYWluaW5nLWFuZC1ub24tbnVsbC1hc3NlcnRpb25zXG4gICAgICAkZWxlbWVudCEuaW5uZXJIVE1MID0gb3B0aW9ucz8uZGF0YTtcbiAgICAgIC8vIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=