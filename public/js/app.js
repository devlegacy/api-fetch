!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){function t(){}return t.prototype.start=function(){console.log(">> Start app"),new o.NavBarComponent,new r.ToDoComponent({selector:"#to-do-container"}).render()},t}();document.addEventListener("DOMContentLoaded",(function(){(new i).start()}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NavBarComponent=void 0;var o=function(){var t=Array.prototype.slice.call(document.querySelectorAll(".navbar-burger"),0);t.length>0&&t.forEach((function(t){t.addEventListener("click",(function(){var e=t.dataset.target,n=document.getElementById(e);t.classList.toggle("is-active"),null==n||n.classList.toggle("is-active")}))}))};e.NavBarComponent=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ToDoComponent=void 0;var o=n(3),r=function(){function t(t,e){void 0===e&&(e=new o.ToDoService),this.options=t,this.toDoService=e,this.posts=[]}return t.prototype.render=function(){var t=this,e=document.querySelector(this.options.selector);this.toDoService.getAll().then((function(n){t.posts=n,e.innerHTML=t.template(),null==e||e.addEventListener("click",(function(t){var e=t.target;if(console.log(e),e.classList.value.startsWith("content-content")){var n=e.querySelector(".content");n.addEventListener("blur",(function(t){console.log(t);var e=t.target;e.classList.remove("px-4","py-4"),e.contentEditable="false"}),{once:!0}),n.classList.add("px-4","py-4"),n.contentEditable="true",n.focus()}}))}))},t.prototype.template=function(){var t="";return this.posts.forEach((function(e){t+='\n        <div class="column is-12">\n          <article class="card">\n            <div class="card-content">\n              <div class="content">\n                '+e.title+"\n              </div>\n            </div>\n          </article>\n        </div>\n      "})),t},t}();e.ToDoComponent=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ToDoService=void 0;var o=n(4),r=n(5),i=function(){function t(){this.serviceURL=r.ApiConfig.BASE_URL+"/todos/",this.http=new o.HttpClient}return t.prototype.getAll=function(t){return void 0===t&&(t=20),this.http.get(this.serviceURL+"?_limit="+t)},t.prototype.find=function(){},t.prototype.create=function(){},t.prototype.update=function(){},t.prototype.destroy=function(){},t}();e.ToDoService=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.HttpClient=void 0;var o=function(){function t(){}return t.prototype.get=function(e){return t.configureRequest(e,"GET")},t.prototype.post=function(e,n){return t.configureRequest(e,"POST")},t.configureRequest=function(t,e,n){return void 0===n&&(n=null),fetch(t,{method:e}).then((function(t){return t.json()}))},t}();e.HttpClient=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ApiConfig=void 0;var o=function(){function t(){}return t.BASE_URL="https://jsonplaceholder.typicode.com",t}();e.ApiConfig=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,